'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
<<<<<<< HEAD

var _chalk;

function _load_chalk() {
  return (_chalk = _interopRequireDefault(require('chalk')));
}

var _prettyFormat;

function _load_prettyFormat() {
  return (_prettyFormat = _interopRequireDefault(require('pretty-format')));
}

=======
exports.default = void 0;
function _chalk() {
  const data = _interopRequireDefault(require('chalk'));
  _chalk = function () {
    return data;
  };
  return data;
}
>>>>>>> 74277b58428b76b5d4577f14d767a83dccdacaf2
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj};
}
/**
<<<<<<< HEAD
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
=======
 * Copyright (c) Meta Platforms, Inc. and affiliates.
>>>>>>> 74277b58428b76b5d4577f14d767a83dccdacaf2
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

<<<<<<< HEAD
const format = value =>
  (0, (_prettyFormat || _load_prettyFormat()).default)(value, {min: true});

exports.default = {
  mapCoverage: () => `  Option ${(_chalk || _load_chalk()).default.bold(
    '"mapCoverage"'
  )} has been removed, as it's no longer necessary.

  Please update your configuration.`,

  preprocessorIgnorePatterns: options => `  Option ${(
    _chalk || _load_chalk()
  ).default.bold('"preprocessorIgnorePatterns"')} was replaced by ${(
    _chalk || _load_chalk()
  ).default.bold(
    '"transformIgnorePatterns"'
  )}, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"transformIgnorePatterns"')}: ${(
    _chalk || _load_chalk()
  ).default.bold(format(options.preprocessorIgnorePatterns))}
  }

  Please update your configuration.`,

  scriptPreprocessor: options => `  Option ${(
    _chalk || _load_chalk()
  ).default.bold('"scriptPreprocessor"')} was replaced by ${(
    _chalk || _load_chalk()
  ).default.bold('"transform"')}, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"transform"')}: ${(
    _chalk || _load_chalk()
  ).default.bold(`{".*": ${format(options.scriptPreprocessor)}}`)}
  }

  Please update your configuration.`,

  testPathDirs: options => `  Option ${(_chalk || _load_chalk()).default.bold(
    '"testPathDirs"'
  )} was replaced by ${(_chalk || _load_chalk()).default.bold('"roots"')}.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"roots"')}: ${(
    _chalk || _load_chalk()
  ).default.bold(format(options.testPathDirs))}
  }

  Please update your configuration.
  `
};
=======
const deprecatedOptions = {
  browser: () =>
    `  Option ${_chalk().default.bold(
      '"browser"'
    )} has been deprecated. Please install "browser-resolve" and use the "resolver" option in Jest configuration as shown in the documentation: https://jestjs.io/docs/configuration#resolver-string`,
  collectCoverageOnlyFrom: _options => `  Option ${_chalk().default.bold(
    '"collectCoverageOnlyFrom"'
  )} was replaced by ${_chalk().default.bold('"collectCoverageFrom"')}.

    Please update your configuration.`,
  extraGlobals: _options => `  Option ${_chalk().default.bold(
    '"extraGlobals"'
  )} was replaced by ${_chalk().default.bold('"sandboxInjectedGlobals"')}.

  Please update your configuration.`,
  moduleLoader: _options => `  Option ${_chalk().default.bold(
    '"moduleLoader"'
  )} was replaced by ${_chalk().default.bold('"runtime"')}.

  Please update your configuration.`,
  preprocessorIgnorePatterns: _options => `  Option ${_chalk().default.bold(
    '"preprocessorIgnorePatterns"'
  )} was replaced by ${_chalk().default.bold(
    '"transformIgnorePatterns"'
  )}, which support multiple preprocessors.

  Please update your configuration.`,
  scriptPreprocessor: _options => `  Option ${_chalk().default.bold(
    '"scriptPreprocessor"'
  )} was replaced by ${_chalk().default.bold(
    '"transform"'
  )}, which support multiple preprocessors.

  Please update your configuration.`,
  setupTestFrameworkScriptFile: _options => `  Option ${_chalk().default.bold(
    '"setupTestFrameworkScriptFile"'
  )} was replaced by configuration ${_chalk().default.bold(
    '"setupFilesAfterEnv"'
  )}, which supports multiple paths.

  Please update your configuration.`,
  testPathDirs: _options => `  Option ${_chalk().default.bold(
    '"testPathDirs"'
  )} was replaced by ${_chalk().default.bold('"roots"')}.

  Please update your configuration.
  `,
  testURL: _options => `  Option ${_chalk().default.bold(
    '"testURL"'
  )} was replaced by passing the URL via ${_chalk().default.bold(
    '"testEnvironmentOptions.url"'
  )}.

  Please update your configuration.`,
  timers: _options => `  Option ${_chalk().default.bold(
    '"timers"'
  )} was replaced by ${_chalk().default.bold('"fakeTimers"')}.

  Please update your configuration.`
};
var _default = deprecatedOptions;
exports.default = _default;
>>>>>>> 74277b58428b76b5d4577f14d767a83dccdacaf2
