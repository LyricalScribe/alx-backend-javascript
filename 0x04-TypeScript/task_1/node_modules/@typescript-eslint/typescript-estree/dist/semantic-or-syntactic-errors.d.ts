import type { Diagnostic, Program, SourceFile } from 'typescript';
export interface SemanticOrSyntacticError extends Diagnostic {
    message: string;
}
/**
 * By default, diagnostics from the TypeScript compiler contain all errors - regardless of whether
 * they are related to generic ECMAScript standards, or TypeScript-specific constructs.
 *
 * Therefore, we filter out all diagnostics, except for the ones we explicitly want to consider when
 * the user opts in to throwing errors on semantic issues.
 */
<<<<<<<< HEAD:0x04. Typescript/task_1/node_modules/@typescript-eslint/typescript-estree/dist/semantic-or-syntactic-errors.d.ts
export declare function getFirstSemanticOrSyntacticError(program: ts.Program, ast: ts.SourceFile): SemanticOrSyntacticError | undefined;
export {};
========
export declare function getFirstSemanticOrSyntacticError(program: Program, ast: SourceFile): SemanticOrSyntacticError | undefined;
>>>>>>>> 74277b58428b76b5d4577f14d767a83dccdacaf2:0x02-ES6_classes/node_modules/@typescript-eslint/typescript-estree/dist/semantic-or-syntactic-errors.d.ts
//# sourceMappingURL=semantic-or-syntactic-errors.d.ts.map