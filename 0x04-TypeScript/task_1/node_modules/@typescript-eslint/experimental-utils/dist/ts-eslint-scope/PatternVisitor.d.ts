<<<<<<<< HEAD:0x04. Typescript/task_1/node_modules/@typescript-eslint/experimental-utils/dist/ts-eslint-scope/PatternVisitor.d.ts
import { TSESTree } from '../ts-estree';
import { ScopeManager } from './ScopeManager';
import { PatternVisitorCallback, PatternVisitorOptions, Visitor } from './Options';
interface PatternVisitor extends Visitor {
    options: PatternVisitorOptions;
    scopeManager: ScopeManager;
    parent?: TSESTree.Node;
    rightHandNodes: TSESTree.Node[];
    Identifier(pattern: TSESTree.Node): void;
    Property(property: TSESTree.Node): void;
    ArrayPattern(pattern: TSESTree.Node): void;
    AssignmentPattern(pattern: TSESTree.Node): void;
    RestElement(pattern: TSESTree.Node): void;
    MemberExpression(node: TSESTree.Node): void;
    SpreadElement(node: TSESTree.Node): void;
    ArrayExpression(node: TSESTree.Node): void;
    AssignmentExpression(node: TSESTree.Node): void;
    CallExpression(node: TSESTree.Node): void;
}
declare const PatternVisitor: {
    new (options: PatternVisitorOptions, rootPattern: TSESTree.BaseNode, callback: PatternVisitorCallback): PatternVisitor;
    isPattern(node: TSESTree.Node): boolean;
};
export { PatternVisitor };
//# sourceMappingURL=PatternVisitor.d.ts.map
========
import { TSESTree } from '../ts-estree';
import { PatternVisitorCallback, PatternVisitorOptions, Visitor } from './Options';
import { ScopeManager } from './ScopeManager';
interface PatternVisitor extends Visitor {
    options: PatternVisitorOptions;
    scopeManager: ScopeManager;
    parent?: TSESTree.Node;
    rightHandNodes: TSESTree.Node[];
    Identifier(pattern: TSESTree.Node): void;
    Property(property: TSESTree.Node): void;
    ArrayPattern(pattern: TSESTree.Node): void;
    AssignmentPattern(pattern: TSESTree.Node): void;
    RestElement(pattern: TSESTree.Node): void;
    MemberExpression(node: TSESTree.Node): void;
    SpreadElement(node: TSESTree.Node): void;
    ArrayExpression(node: TSESTree.Node): void;
    AssignmentExpression(node: TSESTree.Node): void;
    CallExpression(node: TSESTree.Node): void;
}
declare const PatternVisitor: {
    new (options: PatternVisitorOptions, rootPattern: TSESTree.BaseNode, callback: PatternVisitorCallback): PatternVisitor;
    isPattern(node: TSESTree.Node): boolean;
};
export { PatternVisitor };
//# sourceMappingURL=PatternVisitor.d.ts.map
>>>>>>>> 74277b58428b76b5d4577f14d767a83dccdacaf2:0x02-ES6_classes/node_modules/@typescript-eslint/utils/_ts3.4/dist/ts-eslint-scope/PatternVisitor.d.ts
